<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CF37C5CB-973F-406C-83DB-2A55B0530A5E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>BddCloud.UnitTestPatterns.Test</RootNamespace>
    <AssemblyName>BddCloud.UnitTestPatterns.Test</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Castle.Core">
      <HintPath>..\..\..\packages\Castle.Core.2.5.2\lib\NET35\Castle.Core.dll</HintPath>
    </Reference>
    <Reference Include="MavenThought.Commons">
      <HintPath>..\..\..\packages\maventhought.commons.0.9.4\lib\MavenThought.Commons.dll</HintPath>
    </Reference>
    <Reference Include="MavenThought.Commons.Testing.NUnit">
      <HintPath>..\..\..\packages\maventhought.testing.nunit.0.3.5\lib\MavenThought.Commons.Testing.NUnit.dll</HintPath>
    </Reference>
    <Reference Include="MavenThought.Commons.WPF">
      <HintPath>..\..\..\packages\maventhought.commons.0.9.4\lib\MavenThought.Commons.WPF.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Practices.ServiceLocation">
      <HintPath>..\..\..\packages\CommonServiceLocator.1.0\lib\NET35\Microsoft.Practices.ServiceLocation.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework">
      <HintPath>..\..\..\packages\NUnit.2.5.10.11092\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="nunit.mocks">
      <HintPath>..\..\..\packages\NUnit.2.5.10.11092\lib\nunit.mocks.dll</HintPath>
    </Reference>
    <Reference Include="pnunit.framework">
      <HintPath>..\..\..\packages\NUnit.2.5.10.11092\lib\pnunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="Rhino.Mocks">
      <HintPath>..\..\..\packages\RhinoMocks.3.6\lib\Rhino.Mocks.dll</HintPath>
    </Reference>
    <Reference Include="SharpTestsEx">
      <HintPath>..\..\..\packages\SharpTestsEx.1.1.1\lib\SharpTestsEx.dll</HintPath>
    </Reference>
    <Reference Include="StructureMap">
      <HintPath>..\..\..\packages\structuremap.2.6.2\lib\StructureMap.dll</HintPath>
    </Reference>
    <Reference Include="StructureMap.AutoMocking">
      <HintPath>..\..\..\packages\structuremap.automocking.2.6.2.1\lib\StructureMap.AutoMocking.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_ilist_contract_has_item_assigned_to_index.cs">
      <DependentUpon>ListOfStringSpecificationWithIListContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_ilist_contract_has_item_inserted.cs">
      <DependentUpon>ListOfStringSpecificationWithIListContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_ilist_contract_has_item_removed_at_index.cs">
      <DependentUpon>ListOfStringSpecificationWithIListContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_ilist_contract_has_item_removed_at_index_that_does_not_exist.cs">
      <DependentUpon>ListOfStringSpecificationWithIListContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_ilist_contract_indexes_out_of_bounds.cs">
      <DependentUpon>ListOfStringSpecificationWithIListContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_ilist_contract_is_constructed_with_initial_items.cs">
      <DependentUpon>ListOfStringSpecificationWithIListContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_ilist_contract_is_constructed.cs">
      <DependentUpon>ListOfStringSpecificationWithIListContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_icollection_contract_clears_an_empty_list.cs">
      <DependentUpon>ListOfStringSpecificationWithICollectionContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_icollection_contract_adds_item.cs">
      <DependentUpon>ListOfStringSpecificationWithICollectionContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_icollection_contract_is_created.cs">
      <DependentUpon>ListOfStringSpecificationWithICollectionContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\ListOfStringSpecificationWithICollectionContract.cs" />
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_enumerable_contract_moves_next_after_resetting_on_first_item.cs">
      <DependentUpon>ListOfStringSpecficationWithIEnumerableContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_enumerable_contract_resets_after_being_on_first_item.cs">
      <DependentUpon>ListOfStringSpecficationWithIEnumerableContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_enumerable_contract_has_no_items_and_goes_to_next_item.cs">
      <DependentUpon>ListOfStringSpecficationWithIEnumerableContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\ListOfStringSpecficationWithIEnumerableContract.cs" />
    <Compile Include="Sample00.GivenWhenThenPattern\ListOfStringSpecificationWithIListContract.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_enumerable_contract_goes_to_next_item.cs">
      <DependentUpon>ListOfStringSpecficationWithIEnumerableContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_enumerable_contract_is_constructed.cs">
      <DependentUpon>ListOfStringSpecficationWithIEnumerableContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample00.GivenWhenThenPattern\When_list_of_string_with_enumerable_contract_is_constructed_with.cs">
      <DependentUpon>ListOfStringSpecficationWithIEnumerableContract.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample01.IntegrationTestPattern\When_twitter_service_with_dependencies_by_contract_records_twitter_is_online_status_and_twitter_is_offline.cs">
      <DependentUpon>TwitterServiceWithDependenciesByContractSpecification.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample01.IntegrationTestPattern\When_twitter_service_with_dependencies_by_contract_records_twitter_is_online_status_and_twitter_is_online.cs">
      <DependentUpon>TwitterServiceWithDependenciesByContractSpecification.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample02.DependencyInjectionTestPattern\TwitterServiceWithDependenciesByPropertySetters.cs" />
    <Compile Include="Sample02.DependencyInjectionTestPattern\TwitterServiceWithDependencyInjectionSpecification.cs" />
    <Compile Include="Sample02.DependencyInjectionTestPattern\When_twitter_service_with_concrete_dependencies_records_twitter_is_online_status.cs">
      <DependentUpon>TwitterServiceWithDependenciesByPropertySetters.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample02.DependencyInjectionTestPattern\When_twitter_service_with_dependency_injection_records_twitter_is_online_status_and_twitter_is_online.cs">
      <DependentUpon>TwitterServiceWithDependencyInjectionSpecification.cs</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Sample01.IntegrationTestPattern\TwitterServiceWithDependenciesByContractSpecification.cs" />
    <Compile Include="Sample01.IntegrationTestPattern\When_twitter_service_with_concrete_dependencies_records_twitter_is_online_status.cs">
      <DependentUpon>TwitterServiceWithConcreteDependenciesSpecification.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample01.IntegrationTestPattern\TwitterServiceWithConcreteDependenciesSpecification.cs" />
    <Compile Include="Sample02.DependencyInjectionTestPattern\When_twitter_service_with_dependency_injection_records_twitter_is_online_status_and_twitter_is_offline.cs">
      <DependentUpon>TwitterServiceWithDependencyInjectionSpecification.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample02.DependencyInjectionTestPattern\When_twitter_service_with_dependency_property_setters_does_not_set_dependency_for_database_repository.cs">
      <DependentUpon>TwitterServiceWithDependenciesByPropertySetters.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample03.SingleResponsibilityTestPattern\SpreadsheetImportWithSingleResponsibilitySpecification.cs" />
    <Compile Include="Sample03.SingleResponsibilityTestPattern\When_spreadsheet_import_iwht_multiple_responsibilities_creates_spreadsheet_from_csv_file.cs">
      <DependentUpon>SpreadsheetImportWithMultipleResponsibilitiesSpecification.cs</DependentUpon>
    </Compile>
    <Compile Include="Sample03.SingleResponsibilityTestPattern\SpreadsheetImportWithMultipleResponsibilitiesSpecification.cs" />
    <Compile Include="Sample03.SingleResponsibilityTestPattern\When_spreadsheet_import_with_single_responsibility_creates_spreadsheet_from_csv_file.cs">
      <DependentUpon>SpreadsheetImportWithSingleResponsibilitySpecification.cs</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\main\BddCloud.UnitTestPatterns\BddCloud.UnitTestPatterns.csproj">
      <Project>{68DB2DCC-A280-4B10-8483-CB4AB59B90C0}</Project>
      <Name>BddCloud.UnitTestPatterns</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>